#include <cassert>
#include <memory>
#include <utility>

///////////////////////////////////////////////////////////

class Entity
{
public:

	void test()
	{ 
		[this](){ m_data = 1; }();
	}

private:

	int m_data = 0;
};

///////////////////////////////////////////////////////////

int main()
{
	auto x = 1, y = 2;

	[&x, y]() mutable { x = ++y; }();
		
	assert(x == 3 && y == 2);

//  -------------------------------------------------------

//	[&](){}(); // bad

//	[=](){}(); // bad

//  -------------------------------------------------------

	auto ptr_1 = std::make_unique < int > (1);

	[ptr_2 = std::move(ptr_1)](){ assert(*ptr_2 == 1); }();

//  -------------------------------------------------------

	Entity().test();
}