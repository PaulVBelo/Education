#include <cassert>
#include <ostream>
#include <sstream>

/////////////////////////////////////////////////////////////////////////////////////////

template < typename T > struct View 
{
    const T & x;
};

/////////////////////////////////////////////////////////////////////////////////////////

template < typename T > auto & operator<<(std::ostream & stream, const View < T > & view)
{
    return stream << view.x << ' ';
}

/////////////////////////////////////////////////////////////////////////////////////////

template < typename ... Ts > auto test(Ts ... xs)
{
    return (std::stringstream() << ... << View(xs)).str();
}

/////////////////////////////////////////////////////////////////////////////////////////

int main()
{
    assert(test(1, 2, 3) == "1 2 3 ");
}